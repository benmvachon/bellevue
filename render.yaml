# render.yaml
# Combined Render services for app, MySQL, Redis, and RabbitMQ

services:
  # --- 1. Spring Boot App ---
  - name: bellevue-app
    type: web
    env: docker
    plan: standard
    dockerfilePath: ./Dockerfile
    autoDeploy: false
    envVars:
      - key: SPRING_PROFILES_ACTIVE
        value: prod
      - key: SPRING_DATASOURCE_URL
        value: jdbc:mysql://bellevue-mysql:3306/bellevue_dev
      - key: SPRING_DATASOURCE_USERNAME
        value: root
      - key: SPRING_DATASOURCE_PASSWORD
        value: root
      - key: SPRING_DATA_REDIS_HOST
        value: bellevue-redis
      - key: SPRING_DATA_REDIS_PORT
        value: "6379"
      - key: SPRING_RABBITMQ_HOST
        value: bellevue-rabbitmq
      - key: SPRING_RABBITMQ_PORT
        value: "5672"
      - key: SPRING_RABBITMQ_STOMP_PORT
        value: "61613"
      - key: SPRING_RABBITMQ_USERNAME
        value: guest
      - key: SPRING_RABBITMQ_PASSWORD
        value: guest
    routes:
      - type: http
        name: main
        domain: your-domain.onrender.com

  # --- 2. MySQL Database ---
  - name: bellevue-mysql
    type: private-service
    env: docker
    dockerfilePath: ./fly/mysql/Dockerfile
    autoDeploy: false
    envVars:
      - key: MYSQL_DATABASE
        value: bellevue_dev
      - key: MYSQL_ROOT_PASSWORD
        value: root
      - key: TZ
        value: America/New_York
    disk:
      name: mysql-data
      mountPath: /data
      sizeGB: 10

  # --- 3. Redis ---
  - name: bellevue-redis
    type: private-service
    env: docker
    image: redis:6
    autoDeploy: false

  # --- 4. RabbitMQ ---
  - name: bellevue-rabbitmq
    type: private-service
    env: docker
    image: rabbitmq:3-management
    autoDeploy: false
    envVars:
      - key: RABBITMQ_DEFAULT_USER
        value: guest
      - key: RABBITMQ_DEFAULT_PASS
        value: guest
      - key: RABBITMQ_LOG_LEVEL
        value: debug
    startCommand: "/bin/sh -c 'rabbitmq-plugins enable --offline rabbitmq_stomp && rabbitmq-server'"
