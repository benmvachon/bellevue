version: "3.8"

services:
  mysql:
    image: mysql:8
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      MYSQL_USER: ${SPRING_DATASOURCE_USERNAME}
      MYSQL_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      MYSQL_DATABASE: ${SPRING_DATASOURCE_DB}
      TZ: America/New_York
    volumes:
      - ./src/main/sql:/docker-entrypoint-initdb.d
      - ./mysql.cnf:/etc/mysql/conf.d/custom.cnf
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306" # Or use: "${MYSQL_PORT:-3306}:3306" to make it configurable
    networks:
      - bellevue_net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "${SPRING_DATASOURCE_HOST}", "-u", "${SPRING_DATASOURCE_USERNAME}", "-p${SPRING_DATASOURCE_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:6
    container_name: redis_cache
    ports:
      - "${SPRING_DATA_REDIS_PORT}:6379"
    networks:
      - bellevue_net
    command: redis-server --notify-keyspace-events Ex
    volumes:
    - redis_data:/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_broker
    environment:
      RABBITMQ_DEFAULT_USER: ${SPRING_RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${SPRING_RABBITMQ_PASSWORD}
    ports:
      - "${SPRING_RABBITMQ_PORT}:5672"
      - "15672:15672" # Management UI (not in .env but useful)
      - "${SPRING_RABBITMQ_STOMP_PORT}:61613"
    networks:
      - bellevue_net
    command: >
      bash -c "
      rabbitmq-plugins enable --offline rabbitmq_management &&
      rabbitmq-plugins enable --offline rabbitmq_stomp &&
      rabbitmq-server
      "
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  bellevue_net:
    driver: bridge

volumes:
  redis_data:
  mysql_data: